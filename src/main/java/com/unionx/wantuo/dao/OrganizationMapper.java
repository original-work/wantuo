package com.unionx.wantuo.dao;

import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.unionx.wantuo.base.BaseDao;
import com.unionx.wantuo.model.Organization;

public interface OrganizationMapper extends BaseDao<Organization>{
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbggenerated Thu Jan 14 16:38:46 CST 2016
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbggenerated Thu Jan 14 16:38:46 CST 2016
     */
    int insert(Organization record);

   /**
    * 机构信息保存方法
    * @param record
    * @return
    */
    int insertSelective(Organization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbggenerated Thu Jan 14 16:38:46 CST 2016
     */
    Organization selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbggenerated Thu Jan 14 16:38:46 CST 2016
     */
    int updateByPrimaryKeySelective(Organization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_organization
     *
     * @mbggenerated Thu Jan 14 16:38:46 CST 2016
     */
    int updateByPrimaryKey(Organization record);
    
    /**
     * 根据登入机构帐号查讯机构信息
     * @param loginAccounts
     * @return
     */
    Organization findByLoginAccounts(String loginAccounts);
    
    /**
     * @Title: phoneUpdateOrder 
     * @Description: TODO(手机端机构预约+1) 
     * @param @param o 设定文件 
     * @author abner
     * @return void 返回类型 
     * @throws
     */
    void phoneUpdateOrder(Organization o);
    /**
     * 审核
     * @param parmMap
     */
    void checkSuccess(Map<Object, Object> parmMap);
    /**
     * 认证
     */
    void attestationSuccess(Map<Object, Object> parmMap);
    /**
     * 假删除
     * @param id
     */
    void daleteData(int id);

    int updateById(@Param("coordinateX")String coordinateX,@Param("coordinateY")String coordinateY,@Param("id")String id );
    
    /**
     * 授权
     * @param parmMap
     */
    void warrantySuccess(Map<Object, Object> parmMap);
    
    /**
     * 后台管理查询机构详情
     * @param loginAccounts 机构账号
     * @return
     */
    Organization findByDetails(@Param("loginAccounts")String loginAccounts);

    /**
     * @Title: delectAll 
     * @Description: TODO(删除所有) 
     * @param @param loginAccounts 设定文件 
     * @author abner
     * @return void 返回类型 
     * @throws
     */
	void delectAllClass(@Param("loginAccounts")String loginAccounts);
	void delectAllCollect(@Param("loginAccounts")String loginAccounts);
	void delectAllEvaluate(@Param("loginAccounts")String loginAccounts);
	void delectAllla(@Param("loginAccounts")String loginAccounts);
	void delectAllpla(@Param("loginAccounts")String loginAccounts);
	void delectAllStudentSchool(@Param("loginAccounts")String loginAccounts);
	void delectAllTeacher(@Param("loginAccounts")String loginAccounts);
}