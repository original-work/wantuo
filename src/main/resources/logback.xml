<?xml version="1.0" encoding="UTF-8"?>  
    <configuration info="true">  
        <!-- 应用名称 -->  
        <property name="APP_NAME" value="wantuo" />  
        <!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为logs目录做日志存放的目录 -->  
        <property name="LOG_HOME" value="D:\\wantuoLog4j" />  
        <!-- 日志输出格式 -->  
        <property name="ENCODER_PATTERN"  
           value="%d{yyyy-MM-dd  HH:mm:ss.SSS} [%thread] %-5level 类名:%logger{80} 方法名:%M 行号:%L- %msg%n" />  
<!--             value="%d{yyyy-MM-dd  HH:mm:ss.SSS}  %-5level - %msg%n" />   -->
        <contextName>${APP_NAME}</contextName>  
        
        
        <!-- mybatis 日志打印如果在 ssm 中，可能就需要下边的7行了。-->
		<logger name="com.ibatis" level="DEBUG" />
		<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />
		<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />
		<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />
		<logger name="java.sql.Connection" level="DEBUG" />
		<logger name="java.sql.Statement" level="DEBUG" />
		<logger name="java.sql.PreparedStatement" level="DEBUG" />
        
        <logger name="com.unionx.wantuo.dao" level="DEBUG">
        </logger>
        
      
        <!-- 控制台日志：输出全部日志到控制台 -->  
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">  
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">  
                <Pattern>${ENCODER_PATTERN}</Pattern>  
            </encoder>  
        </appender>  
      
     
        <!-- 文件日志：输出全部日志到文件 -->  
        <appender name="FILE"  
            class="ch.qos.logback.core.rolling.RollingFileAppender">  
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
                <fileNamePattern>${LOG_HOME}/output.%d{yyyy-MM-dd}.log</fileNamePattern>
				<!-- 保存30天日志文件   -->
                <maxHistory>30</maxHistory>  
            </rollingPolicy>  
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">  
                <pattern>${ENCODER_PATTERN}</pattern>  
            </encoder>  
        </appender>  
      
        <!-- 错误日志：用于将错误日志输出到独立文件 -->  
        <appender name="ERROR_FILE"  
            class="ch.qos.logback.core.rolling.RollingFileAppender">  
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
                <fileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log</fileNamePattern>  
                <maxHistory>30</maxHistory>  
            </rollingPolicy>  
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">  
                <pattern>${ENCODER_PATTERN}</pattern>  
            </encoder>  
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">  
                <level>WARN</level>  
            </filter>  
        </appender>  
          
        <!-- 独立输出的同步日志 -->  
        <appender name="SYNC_FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">  
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
                <fileNamePattern>${LOG_HOME}/sync.%d{yyyy-MM-dd}.log</fileNamePattern>  
                <maxHistory>30</maxHistory>  
            </rollingPolicy>  
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">  
                <pattern>${ENCODER_PATTERN}</pattern>  
            </encoder>  
        </appender>  
          
        <logger name="log.sync" level="INFO" addtivity="true">  
            <appender-ref ref="SYNC_FILE" />  
        </logger>  
        
        <!-- 全局输出的方式 -->
        <root level="INFO">  
            <appender-ref ref="STDOUT" />  
            <appender-ref ref="FILE" />  
            <appender-ref ref="ERROR_FILE" />  
        </root>  
        
        
        
</configuration>
